name: Release
run-name: Cut Release ${{github.event.inputs.release-version || github.ref_name}}
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # ex. v1.0.0
      - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+" # ex. v1.1.0-rc1
      - "v0.0.1" # used for testing only
      - "v0.0.1-rc[0-9]+" # used for testing only
  workflow_dispatch:
    inputs:
      release-version:
        description: "Release version (v#.#.#[-rc#])"
        required: true

env:
  NEW_RELEASE_TAG_FROM_UI: ${{github.event.inputs.release-version}}
  NEW_RELEASE_TAG: ${{github.event.inputs.release-version || github.ref_name}}
  RELEASE_BRANCH_NAME: release-${{github.event.inputs.release-version || github.ref_name}}
  LATEST_FULL_RELEASE_TAG: _LATEST-FULL-RELEASE
  TEST_RUN: false
  DOCKER_HUB_PROFILE: amplicalabs
  IMAGE_NAME: reconnection-service

#  ${{startsWith(github.event.inputs.release-version || github.ref_name, 'v0.0.1')}}

jobs:
  build-and-publish-container-image:
    name: Build and publish container image
    runs-on: ubuntu-20.04
    container: ghcr.io/libertydsnp/frequency/ci-base-image
    steps:
      - name: Validate Version Tag
        if: env.NEW_RELEASE_TAG_FROM_UI != ''
        shell: bash
        run: |
          version=${{env.NEW_RELEASE_TAG_FROM_UI}}
          echo "Release version entered in UI: $version"
          regex='^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-rc[1-9]\d*)?$'
          if [[ ! $version =~ $regex ]]; then
            echo "ERROR: Entered version $version is not valid."
            echo "Please use v#.#.#[-rc#] format."
            exit 1
          fi
          echo "valid-version=true" >> $GITHUB_OUTPUT
      - name: Check Out Repo
        uses: actions/checkout@v3
        with:
          ref: ${{env.NEW_RELEASE_TAG_FROM_UI}}
      - name: Full Release?
        id: is-full-release
        uses: ./.github/workflows/common/is-full-release
        with:
          version-tag: ${{env.NEW_RELEASE_TAG}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{matrix.arch}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME_FC}}
          password: ${{secrets.DOCKERHUB_TOKEN_FC}}
      - name: Build and Push Microservice Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: ${{env.TEST_RUN != 'true'}}
          file: ./Dockerfile
          tags: |
            ${{env.DOCKER_HUB_PROFILE}}/${{env.IMAGE_NAME}}:${{env.NEW_RELEASE_TAG}}
      - name: Update DockerHub Latest Tag
        if: steps.is-full-release.outputs.is-full-release == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: ${{env.TEST_RUN != 'true'}}
          file: ./Dockerfile
          tags: |
            ${{env.DOCKER_HUB_PROFILE}}/${{env.IMAGE_NAME}}:latest
      # - name: Update DockerHub Description
      #   if: env.TEST_RUN != 'true'
      #   uses: peter-evans/dockerhub-description@dc67fad7001ef9e8e3c124cb7a64e16d0a63d864
      #   with:
      #     username: ${{secrets.DOCKERHUB_USERNAME_FC}}
      #     password: ${{secrets.DOCKERHUB_TOKEN_FC}}
      #     repository: ${{env.DOCKER_HUB_PROFILE}}/${{env.IMAGE_NAME}}-${{matrix.network}}
      #     readme-filepath: docker/${{env.IMAGE_NAME}}-${{matrix.network}}.overview.md
